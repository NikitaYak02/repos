Программа читает выражение со стандартного ввода. Признак конца выражения — перевод строки. Приглашений ко вводу нет.
Если выражение корректное, то программа читает значения переменных со стандартного ввода. Признак конца значения переменной — перевод строки. Переменные вводятся в лексикографическом порядке. Приглашения выводить не нужно. После этого программа вычисляет значение выражения, печатает результат на стандартный вывод и завершается с кодом 0.
Если выражение некорректное, программа объясняет ошибку на стандартном потоке ошибок и завершается с кодом 1. Стандартный вывод в этом случае должен быть пустым.
Если происходит ошибка чтения значения переменной, причина сообщается на стандартном потоке ошибок и программа завершается с кодом 2. Стандартный вывод в этом случае тоже должен быть пустым.
Если происходит ошибка во время вычисления выражения, причина сообщается на стандартном потоке ошибок и программа завершается с кодом 3. Стандартный вывод в этом случае тоже должен быть пустым.
Программа не должна читать вторую и дальнейшие строки, пока не проверит строку с выражением.
Число конкретно в моем случае - точка с непустой последовательностью цифр, не длиньше 6, хотя бы с одной стороны до или после запятой
Идентификатор понимается так же, как в языке Си (с ограничением на длину). Обратите внимание на то, что операция деления должна работать так же, как в Си. Ограничений на длину строки ввода нет. В выражении может быть произвольное количество (даже нулевое) пробельных символов — разделителей. Все операции, указанные в условии задания, являются бинарными. Под целочисленным типом понимается тип int. Все операции должны выполняться согласно семантике языка Си.
Р04: Утилиты нужно реализовывать только при помощи операций НИЗКОГО ввода-вывода. Подключать stdio.h и использовать функции оттуда нельзя.
